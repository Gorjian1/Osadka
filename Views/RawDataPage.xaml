<UserControl x:Class="Osadka.Views.RawDataPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:conv="clr-namespace:Osadka.Converters"
             mc:Ignorable="d">

    <UserControl.Resources>
        <conv:RelaxedDoubleConverter x:Key="RelaxedDouble"/>
        <conv:RelaxedDoubleConverter x:Key="RelaxedDoubleConverter"/>

        <!-- Нескладываемый тулбар: без overflow/скролла/переноса; контент может выходить за край -->
        <Style x:Key="NoOverflowToolBar"
               TargetType="{x:Type ToolBar}"
               BasedOn="{StaticResource {x:Type ToolBar}}">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" ClipToBounds="False"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                ClipToBounds="False">
                            <ItemsPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FastGrid" TargetType="{x:Type DataGrid}">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
            <Setter Property="HeadersVisibility" Value="All"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="HeadersVisibility" Value="All"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#FF65A3DD"/>
            <Setter Property="VerticalGridLinesBrush" Value="#FF65A3DD"/>
            <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
        </Style>
        <Style x:Key="CircleIconButton" TargetType="Button">
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="6,0,0,0"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="12"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <Style x:Key="CellText" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="4,2"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>
        <Style x:Key="CellEdit" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="2"/>
        </Style>

        <SolidColorBrush x:Key="AccentBrush" Color="#FFBDD7F8"/>
        <SolidColorBrush x:Key="AccentBrushHover" Color="#FFA4C4F1"/>
        <SolidColorBrush x:Key="AccentBrushPressed" Color="#FF6F99D3"/>

        <Style x:Key="ToolbarAccentButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Margin" Value="0,0,6,0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrushPressed}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="Tag" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentBrushHover}"/>
                                <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource AccentBrushHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentBrushPressed}"/>
                                <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource AccentBrushPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bd" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolbarTemplateMainButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolbarAccentButton}">
            <Setter Property="Tag" Value="6,0,0,6"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="14,6"/>
            <Setter Property="Content" Value="Выбрать шаблон"/>
            <Style.Resources>
                <SolidColorBrush x:Key="AccentBrush" Color="#FF8EB8E6"/>
                <SolidColorBrush x:Key="AccentBrushHover" Color="#FF76A4D8"/>
                <SolidColorBrush x:Key="AccentBrushPressed" Color="#FF4F7EB8"/>
            </Style.Resources>
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasCustomTemplate}" Value="True">
                    <Setter Property="Content" Value="Открыть шаблон"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToolbarTemplateClearButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolbarAccentButton}">
            <Setter Property="Tag" Value="0,6,6,0"/>
            <Setter Property="Margin" Value="2,0,0,0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="36"/>
        </Style>

        <Style x:Key="ToolbarLabel" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,6,0"/>
        </Style>
        <Style x:Key="ToolbarBox" TargetType="{x:Type ComboBox}">
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="Padding" Value="10,5,32,5"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrushPressed}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="TemplateRoot" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="6"/>
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              IsHitTestVisible="False"
                                              RecognizesAccessKey="True"/>
                            <ToggleButton x:Name="ToggleButton"
                                          Focusable="False"
                                          Background="Transparent"
                                          BorderBrush="{x:Null}"
                                          BorderThickness="0"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          HorizontalAlignment="Right"
                                          Width="28"
                                          Margin="0">
                                <Grid>
                                    <Path x:Name="Arrow"
                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                          Width="8"
                                          Height="4"
                                          Stretch="Uniform"
                                          Fill="Black"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                                </Grid>
                            </ToggleButton>
                            <Popup x:Name="PART_Popup"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                <Border x:Name="DropDownBorder"
                                        MinWidth="{Binding PlacementTarget.ActualWidth, RelativeSource={RelativeSource AncestorType=Popup}}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                        BorderThickness="1"
                                        CornerRadius="6"
                                        SnapsToDevicePixels="True">
                                    <ScrollViewer Margin="0"
                                                  CanContentScroll="True"
                                                  Focusable="False">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrushPressed}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrushHover}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrushHover}"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrushPressed}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrushPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="#80000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolbarText" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="140"/>
            <Setter Property="Margin" Value="0,0,12,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <ToolTip x:Key="TagsTooltip"
             Placement="Bottom"
             StaysOpen="False"
             HasDropShadow="True"
             MaxWidth="560"
             MaxHeight="480">
            <Border Padding="8" Background="{DynamicResource App.PanelBg}">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <TextBox Text="{Binding TagsHelpText}"
                         IsReadOnly="True"
                         AcceptsReturn="True"
                         TextWrapping="Wrap"
                         BorderThickness="0"
                         Background="Transparent"
                         FontSize="13"
                         MinWidth="280"/>
                </ScrollViewer>
            </Border>
        </ToolTip>
    </UserControl.Resources>

    <Grid RenderTransformOrigin="0.501,0.506">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="45.96"/>
            <RowDefinition Height="Auto" MinHeight="33"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- ВЕРХНИЙ ТУЛБАР: не клиппится, не сворачивается -->
        <ToolBarTray Grid.Row="0" Margin="8,8,8,7" ClipToBounds="False">
            <ToolBar RenderTransformOrigin="0.473,0.517"
                     Margin="-8,0,0,0"
                     Style="{StaticResource NoOverflowToolBar}"
                     ClipToBounds="False">
                <!-- Никого не пускаем в overflow -->
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Control}">
                        <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    </Style>
                    <Style TargetType="{x:Type Separator}">
                        <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    </Style>
                </ToolBar.Resources>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="0*"/>
                        <ColumnDefinition Width="12.137"/>
                        <ColumnDefinition Width="Auto" MinWidth="553"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" Grid.ColumnSpan="2" Margin="0,0,15,0">
                        <Button Style="{StaticResource ToolbarAccentButton}" Content="📗 Загрузить Excel"
                                Command="{Binding LoadFromWorkbookCommand}"/>
                        <Separator Margin="5,0"/>
                        <Button Style="{StaticResource ToolbarAccentButton}" Content="Вставить (Ctrl+V)"
                                Command="{Binding PasteCommand}"/>
                        <Separator Margin="5,0"/>
                        <Button Style="{StaticResource ToolbarAccentButton}" Content="Очистить"
                                Command="{Binding ClearCommand}"/>
                        <Separator Margin="8,0"/>
                        <!-- СПЛИТ-КНОПКА ШАБЛОНА -->
                        <Grid Margin="0,0,6,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- Левая часть: выбрать/открыть -->
                            <Button Grid.Column="0"
                                    Style="{StaticResource ToolbarTemplateMainButton}"
                                    Command="{Binding ChooseOrOpenTemplateCommand}"
                                    ToolTip="Если шаблон не выбран — выбрать файл. Если выбран — открыть его."/>

                            <!-- Правая часть: корзина (очистить путь) -->
                            <Button Grid.Column="1"
                                    Style="{StaticResource ToolbarTemplateClearButton}"
                                    Command="{Binding ClearTemplateCommand}"
                                    IsEnabled="{Binding HasCustomTemplate}"
                                    ToolTip="Очистить путь к пользовательскому шаблону">
                                <TextBlock FontFamily="Segoe MDL2 Assets"
                                           Text="&#xE74D;"
                                           FontSize="14"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Button>
                            <Button Grid.Column="2"
                                    Style="{StaticResource CircleIconButton}"
                                    ToolTipService.ShowDuration="60000"
                                    AutomationProperties.Name="Подсказка по тегам шаблона"
                                    Margin="8,0,0,0">
                                <TextBlock Text="!" FontWeight="Bold" FontSize="14"
               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Button.ToolTip>
                                    <ToolTip MaxWidth="460">
                                        <ScrollViewer VerticalScrollBarVisibility="Auto" Height="480">
                                            <StackPanel>
                                                <TextBlock FontWeight="Bold" Text="Теги" Margin="0,0,0,6"/>
                                                <TextBlock TextWrapping="Wrap">
                        <Run Text="/цикл"/><LineBreak/>
                        <Run Text="/предСПмакс"/><LineBreak/>
                        <Run Text="/предРАСЧмакс"/><LineBreak/>
                        <Run Text="/предСПотн"/><LineBreak/>
                        <Run Text="/предРАСЧотн"/><LineBreak/>
                        <Run Text="/общмакс"/><LineBreak/>
                        <Run Text="/общмаксId"/><LineBreak/>
                        <Run Text="/общэкстр"/><LineBreak/>
                        <Run Text="/сеттэкстр"/><LineBreak/>
                        <Run Text="/общэкстрId"/><LineBreak/>
                        <Run Text="/сеттэкстрId"/><LineBreak/>
                        <Run Text="/общср"/><LineBreak/>
                        <Run Text="/сеттмакс"/><LineBreak/>
                        <Run Text="/сеттмаксId"/><LineBreak/>
                        <Run Text="/сеттср"/><LineBreak/>
                        <Run Text="/отнмакс"/><LineBreak/>
                        <Run Text="/отнмаксId"/><LineBreak/>
                        <Run Text="/нетдоступа"/><LineBreak/>
                        <Run Text="/уничтожены"/><LineBreak/>
                        <Run Text="/новые"/><LineBreak/>
                        <Run Text="/общ>сп"/><LineBreak/>
                        <Run Text="/общ>расч"/><LineBreak/>
                        <Run Text="/отн>сп"/><LineBreak/>
                        <Run Text="/отн>расч"/><LineBreak/>
                        <Run Text="/общмин"/><LineBreak/>
                        <Run Text="/сеттмин"/><LineBreak/>
                        <Run Text="/общминId"/><LineBreak/>
                        <Run Text="/сеттминId"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </ScrollViewer>
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>

                        </Grid>

                    </StackPanel>

                    <TextBlock Grid.Column="3"
                               Text="{Binding SelectedCycleHeader}"
                               Opacity="0.75"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Height="16"
                               Width="0"/>

                    <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Center" Width="498">
                        <!-- Объект № -->
                        <TextBlock Style="{StaticResource ToolbarLabel}" Text="Объект №"/>
                        <ComboBox Style="{StaticResource ToolbarBox}"
          ItemsSource="{Binding ObjectNumbers}"
          SelectedItem="{Binding Header.ObjectNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
          Width="80"/>

                        <!-- Цикл № -->
                        <TextBlock Style="{StaticResource ToolbarLabel}" Text="Цикл №"/>
                        <!-- Циклы -->
                        <ComboBox Style="{StaticResource ToolbarBox}"
                                  ItemsSource="{Binding CycleItems}"
                                  SelectedValue="{Binding Header.CycleNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValuePath="Number"
                                  DisplayMemberPath="Label"
                                  MinWidth="140"/>



                        <TextBlock Style="{StaticResource ToolbarLabel}" Text="Единицы"/>
                        <ComboBox Style="{StaticResource ToolbarBox}"
                                  ItemsSource="{Binding CoordUnitValues}"
                                  SelectedItem="{Binding CoordUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </Grid>
            </ToolBar>
        </ToolBarTray>

        <ToolBarTray Margin="0,46,8,26" Grid.RowSpan="3" ClipToBounds="False">
            <ToolBar Margin="0,5,0,5"
             Style="{StaticResource NoOverflowToolBar}"
             ClipToBounds="False">
                <!-- Запрещаем overflow для элементов -->
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Control}">
                        <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    </Style>
                    <Style TargetType="{x:Type Separator}">
                        <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    </Style>
                </ToolBar.Resources>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource ToolbarLabel}" Text="Макс.Пред. СП:"/>
                    <TextBox Width="80"
                     Text="{Binding Header.MaxNomen, Mode=TwoWay,Converter={StaticResource RelaxedDoubleConverter},
                   UpdateSourceTrigger=PropertyChanged,
                   Delay=2000,
                   FallbackValue='',
                   TargetNullValue=''}"
    PreviewTextInput="Limit_PreviewTextInput"
    PreviewKeyDown="Limit_PreviewKeyDown"
    DataObject.Pasting="Limit_Pasting"/>
                    <Separator/>

                    <TextBlock Style="{StaticResource ToolbarLabel}" Text="   Макс.Пред. расчёт:"/>
                    <TextBox Width="80"
                     Text="{Binding Header.MaxCalculated, Mode=TwoWay,Converter={StaticResource RelaxedDoubleConverter},
                   UpdateSourceTrigger=PropertyChanged,
                   Delay=2000,
                   FallbackValue='',
                   TargetNullValue=''}"
    PreviewTextInput="Limit_PreviewTextInput"
    PreviewKeyDown="Limit_PreviewKeyDown"
    DataObject.Pasting="Limit_Pasting" />
                    <Separator/>

                    <TextBlock Style="{StaticResource ToolbarLabel}" Text="   Отн.Пред. СП:"/>
                    <TextBox Width="80"
                     Text="{Binding Header.RelNomen, Mode=TwoWay,Converter={StaticResource RelaxedDoubleConverter},
                   UpdateSourceTrigger=PropertyChanged,
                   Delay=2000,
                   FallbackValue='',
                   TargetNullValue=''}"
    PreviewTextInput="Limit_PreviewTextInput"
    PreviewKeyDown="Limit_PreviewKeyDown"
    DataObject.Pasting="Limit_Pasting"/>
                    <Separator/>

                    <TextBlock Style="{StaticResource ToolbarLabel}" Text="   Отн. Пред, расчёт:"/>
                    <TextBox Width="80"
                     Text="{Binding Header.RelCalculated, Mode=TwoWay,Converter={StaticResource RelaxedDoubleConverter},
                   UpdateSourceTrigger=PropertyChanged,
                   Delay=2000,
                   FallbackValue='',
                   TargetNullValue=''}"
    PreviewTextInput="Limit_PreviewTextInput"
    PreviewKeyDown="Limit_PreviewKeyDown"
    DataObject.Pasting="Limit_Pasting"/>
                </StackPanel>
            </ToolBar>
        </ToolBarTray>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="17*"/>
                <RowDefinition Height="13*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <DataGrid Grid.Column="0"
                      Style="{StaticResource FastGrid}"
                      ItemsSource="{Binding DataRows}"
                      FrozenColumnCount="1" Grid.RowSpan="3">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="№"
                                        Binding="{Binding Id}"
                                        Width="60"
                                        IsReadOnly="False">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Отметка, м"
                                        Binding="{Binding MarkRaw}"
                                        Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Осадка, мм"
                                        Binding="{Binding SettlRaw}"
                                        Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Общая осадка, мм"
                                        Binding="{Binding TotalRaw}"
                                        Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <GridSplitter Grid.Column="1" Width="8" HorizontalAlignment="Stretch" Background="#EEE" Grid.RowSpan="3"/>

            <DataGrid Grid.Column="2"
                      Style="{StaticResource FastGrid}"
                      ItemsSource="{Binding CoordRows}" Grid.RowSpan="3">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="X"
                                        Binding="{Binding X, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                        Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Y"
                                        Binding="{Binding Y, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                        Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
